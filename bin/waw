#!/usr/bin/env ruby

require 'webapp_worker'
require 'trollop'

opts = Trollop::options do
  banner <<-EOS
Usage:
       #{File.basename($0)} [options]

where [options] are:
  EOS

  opt :environment, "Enviroment (i.e. local, development..)", :type => String, :short => "-e"
  opt :jobfile, "A YAML config file", :type => String, :short => "-f"
  opt :run, "Run the jobs", :default => false, :short => "-r"
  opt :jobs, "Show the jobs", :default => false, :short => "-j"
  opt :nextrun, "Find the next N run times, by job (use an integer)", :type => Integer, :short => "-n"
  opt :debug, "Local Debug", :short => "-d"
  opt :verbose, "Verbose Output", :short => "-v"
end

Trollop::die :jobfile, "must specify jobfile" unless File.exist?(opts[:jobfile]) if opts[:jobfile]
Trollop::die :environment, "must specify environment" unless opts[:environment]

job_file = File.absolute_path(opts[:jobfile])

a = WebappWorker::Application.new(environment:opts[:environment])
a.parse_yaml(job_file)

if opts[:nextrun] != nil
	a.next_command_run?(opts[:nextrun]).each do |command,time|
		puts "Job: #{command}"
		puts "   Next Run Time(s): #{time}"
	end
elsif opts[:run] == false && opts[:jobs] == false
	puts
	puts "Host: #{a.hostname}"
	puts "Mailto: #{a.mailto}"
	puts "Environment: #{a.environment}"
	puts "Amount of Jobs: #{a.jobs.length}"
elsif opts[:run] == false && opts[:jobs] == true
	puts "Job File: #{job_file}"
	puts
	puts "Host: #{a.hostname}"
	puts "Mailto: #{a.mailto}"
	puts "Environment: #{a.environment}"
	puts "Amount of Jobs: #{a.jobs.length}"
	puts
	a.jobs.each do |job|
		j = WebappWorker::Job.new(job)
		puts "Job: #{j.command}"
	end
else
	puts "Running Jobs"
	a.run(opts[:debug],opts[:verbose])
end
